******************Review*******************

1. What is git?
    -it is a version control
2. What is a local repository?
    -a storage that is on our computer
3. What is a remote repository?
    -github

4. Architecture of git:
    3 stage architecture:
        working directory
        staging area
        repository

Working directory-->

gitProject1--> pom, src, target, .idea

5. Where should you create your local git repository?
    -ideally you should create your repo inside your working directory. i.e. in this
    case, gitProject1

Note:
One repo for one single project
No subRepos are advised


---------------Tracking your first project using git----------------

1. Decide the location where to create the repository and navigate my Mr.Terminal
to that particular directory
2. Initialize an empty repository: git init--> to initialize an empty repository
    -To show hidden folders: Cmd+Shift+.
    -To delete a repo, simply delete the .git folder
    git init:
    .git: holds the staging area and local repo
3. git status:
    shows you untracked files in red
    shows you tracked files in green
4. Moves all tracked files to the staging area: git add .
5. Sends all files from staging area to the local repo: git commit -m "specific message"
    This will contain name, date, author, code
6. git status after the commit shows working tree clean because we have all three stages
i.e. working directory, staging area, and repo synchronised

---------------------Some Advance git commands----------------------

1. to view the files in your staging area: git ls-files
2. to remove any files from the staging area: git rm --cached filename
3. to restore file from staging area to your working directory: git restore .
4. to see the difference between the staging area and working directory: git diff
    -is going to show the difference in each file that has been modified
    -usually means that the line was deleted and it was replaced, but that is not
    something that will always be true.
    -You need to focus on lone number also mentioned on the top like:
    @@ -5,13 +5,9 @@ --> shows the line number in which the changes were made
5. to see the difference between the files in the staging area and repo: git diff --staged

---------------------The gitIgnore File----------------------

To ignore the file from being tracked by git, we use --> gitignore

1. create a .gitignore file
    a. touch .gitignore
2. enter the name of the files that you want git to ignore from tracking and save the file
    --> that file will be ignored
    in order to ignore a complete folder, write down the name of the folder in .gitignore
    e.g. if you want to ignore target folder in .gitignore type: target/

---------------------Sending our Local Repo to GitHub----------------------

1. Create a new remote repository
2. Establish a connection: git remote add origin URL
3. Check the connection: git remote -v
4. To delete the connection: git remote remove origin
5. Naming the branch: git branch -M main
6. Pushing code for the first time: git push -u origin main
    pushing modified codes after: git push

---------------------Git Cloning----------------------

Git cloning helps us get the code from the remote repositories on our computer
You can Download ZIP from github. It will only have latest commit, none of the previous commits
You need to have the same exact commit history. Git takes commit history very seriously.


